<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/RevitExcelIntegrationApp;component/Resources/Brushes.xaml" />
        <ResourceDictionary Source="pack://application:,,,/RevitExcelIntegrationApp;component/Resources/TextBoxStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--ComboBoxItem Template and Style-->
    <ControlTemplate x:Key="ComboBoxItemTemplate"
                     TargetType="{x:Type ComboBoxItem}">
        <Grid>
            <Border x:Name="Bd"
                    Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <Border x:Name="FocusBorder"
                    BorderBrush="{DynamicResource ControlFocusBorder}"
                    BorderThickness="1"
                    Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <!--<Setter Property="TextElement.Foreground"
                        TargetName="Bd"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />-->
                <Setter Property="Opacity"
                        Value="0.56" />
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="true">
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource ResourceKey=ListSelectedBackground}" />
                <Setter TargetName="Bd"
                        Property="BorderBrush"
                        Value="{DynamicResource ResourceKey=ListSelectedBorder}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource ResourceKey=ListSelectedForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource ResourceKey=ListMouseOverBackground}" />
                <Setter TargetName="Bd"
                        Property="BorderBrush"
                        Value="{DynamicResource ResourceKey=ListMouseOverBorder}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected"
                               Value="False" />
                    <Condition Property="IsMouseOver"
                               Value="False" />
                    <Condition Property="IsKeyboardFocused"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                        TargetName="Bd"
                        Value="{DynamicResource ResourceKey=ListFocusedBackground}" />
                <Setter Property="BorderBrush"
                        TargetName="Bd"
                        Value="{DynamicResource ResourceKey=ListFocusedBorder}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected"
                               Value="true" />
                    <Condition Property="IsMouseOver"
                               Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource ResourceKey=ListMouseOverBackground}" />
                <Setter TargetName="Bd"
                        Property="BorderBrush"
                        Value="{DynamicResource ResourceKey=ControlMouseOverBorder}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource ResourceKey=PrimaryForeground}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxItemStyle"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Padding"
                Value="4,1" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template"
                Value="{StaticResource ComboBoxItemTemplate}" />
    </Style>

    <!--Implicit Style for ComboBoxItem-->
    <Style BasedOn="{StaticResource ResourceKey=ComboBoxItemStyle}"
           TargetType="{x:Type ComboBoxItem}" />

    <!--ComboBoxToggleButton Template and Style-->
    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate"
                     TargetType="{x:Type ToggleButton}">
        <Border x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true">
            <Border x:Name="splitBorder"
                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                    Margin="0"
                    HorizontalAlignment="Right"
                    BorderBrush="Transparent"
                    BorderThickness="1"
                    SnapsToDevicePixels="true">
                <Path x:Name="arrow"
                      Margin="0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                      Fill="{DynamicResource ResourceKey=GlyphForeground}" />
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter TargetName="templateRoot"
                        Property="Background"
                        Value="{DynamicResource ResourceKey=ControlMouseOverBackground}" />
                <Setter TargetName="templateRoot"
                        Property="BorderBrush"
                        Value="{DynamicResource ResourceKey=ControlMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="true">
                <Setter TargetName="templateRoot"
                        Property="Background"
                        Value="{DynamicResource ResourceKey=ControlPressedBackground}" />
                <Setter TargetName="templateRoot"
                        Property="BorderBrush"
                        Value="{DynamicResource ResourceKey=ControlPressedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Opacity"
                        Value="0.56" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="ClickMode"
                Value="Press" />
        <Setter Property="Template"
                Value="{StaticResource ResourceKey=ComboBoxToggleButtonTemplate}" />
    </Style>

    <!--ComboBox Template and Style-->
    <ControlTemplate x:Key="ComboBoxTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                   Margin="1"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   VerticalOffset="-1">
                <Border x:Name="dropDownBorder"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        Background="{DynamicResource ResourceKey=ContentBackground}"
                        BorderBrush="{DynamicResource ResourceKey=PrimaryBorder}"
                        BorderThickness="1">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid"
                              RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                <Rectangle x:Name="opaqueRect"
                                           Fill="{Binding Background, ElementName=dropDownBorder}"
                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter x:Name="contentPresenter"
                              Grid.Column="0"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              IsHitTestVisible="false"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Border x:Name="FocusBorder"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    BorderBrush="{DynamicResource ResourceKey=ControlFocusBorder}"
                    BorderThickness="1"
                    Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems"
                     Value="false">
                <Setter Property="Height"
                        TargetName="dropDownBorder"
                        Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping"
                               Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll"
                     SourceName="DropDownScrollViewer"
                     Value="false">
                <Setter Property="Canvas.Top"
                        TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left"
                        TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter TargetName="contentPresenter"
                        Property="Opacity"
                        Value="0.56" />
            </Trigger>
            <Trigger Property="IsFocused"
                     Value="true">
                <Setter TargetName="FocusBorder"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--Editable ComboBox Tempalte-->
    <ControlTemplate x:Key="ComboBoxEditableTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Border x:Name="dropDownBorder"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        Background="{DynamicResource ResourceKey=ContentBackground}"
                        BorderBrush="{DynamicResource ResourceKey=PrimaryBorder}"
                        BorderThickness="1">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid"
                              RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                <Rectangle x:Name="opaqueRect"
                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                           Fill="{Binding Background, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    Margin="{TemplateBinding BorderThickness}">
                <TextBox x:Name="PART_EditableTextBox"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                         Margin="{TemplateBinding Padding}"
                         Style="{StaticResource TextBoxStyle}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <Border x:Name="FocusBorder"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    BorderBrush="{DynamicResource ResourceKey=ControlFocusBorder}"
                    BorderThickness="1"
                    Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Opacity"
                        TargetName="border"
                        Value="0.56" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin"
                     Value="true">
                <Setter Property="Foreground"
                        Value="{DynamicResource ResourceKey=ControlFocusForeground}" />
            </Trigger>
            <Trigger Property="HasItems"
                     Value="false">
                <Setter Property="Height"
                        TargetName="dropDownBorder"
                        Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping"
                               Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll"
                     SourceName="DropDownScrollViewer"
                     Value="false">
                <Setter Property="Canvas.Top"
                        TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left"
                        TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle"
           TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Background"
                Value="{DynamicResource SecondaryBackground}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryBorder}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Padding"
                Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template"
                Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable"
                     Value="true">
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Padding"
                        Value="2" />
                <Setter Property="Template"
                        Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Implicit Style for ComboBox-->
    <Style BasedOn="{StaticResource ResourceKey=ComboBoxStyle}"
           TargetType="{x:Type ComboBox}" />
</ResourceDictionary>